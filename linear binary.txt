#include<iostream>
using namespace std;
const int MAX = 20;
class student
{
 int n;
 int rollno[MAX];
public:
 void accept(int num);
 bool linearsearch(int key);
 bool binarysearch(int key);
};
void student::accept(int num)
{
 n=num;
 cout<<"Enter "<<num<<" roll numbers of student:"<<endl;
 for(int i=0;i<n;i++)
 {
 cin>>rollno[i];
 }
}
bool student::linearsearch(int key)
{
 for(int i=0;i<n;i++)
 {
 if(rollno[i]==key)
 return true;
 }
 return false;
}
bool student::binarysearch(int key)
{
 int mid;
 int low=0;
 int high=n-1;
 while(low<=high)
 {
 mid=(low+high)/2;
 if(key==rollno[mid])
 return true;
 if(key<mid)
 high=mid-1;
 else
 low=mid+1;
 }
 return false;
}
int main()
{
 student s;
 int n,key,choice;
 do
 {
 cout<<"*****MENUE******";
 cout<<"\n1.Linear Search";
 cout<<"\n2.Binary Search";
 cout<<"\n3.Exit";
 cout<<"\nEnter your choice:";
 cin>>choice;
 switch(choice)
 {
 case 1:
 cout<<"Enter numbers of students:"<<endl;
 cin>>n;
 s.accept(n);
 cout<<"Enter roll no. to be searched:"<<endl;
 cin>>key;
 if(s.linearsearch(key))
 {
 cout<<"Roll no. "<<key<<" found"<<endl;
 }
 else
 {
 cout<<"Roll no. "<<key<<" not found"<<endl;
 }
 break;
 case 2:
 cout<<"Enter numbers of students:"<<endl;
 cin>>n;
 s.accept(n);
 cout<<"Enter roll no. to be searched:"<<endl;
 cin>>key;
 if(s.binarysearch(key))
 {
 cout<<"Roll no. "<<key<<" found"<<endl;
 }
 else
 {
 cout<<"Roll no. "<<key<<" not found"<<endl;
 }
 break;
 case 3:
 cout<<"Exiting program..."<<endl;
 break;
 default:
 cout<<"Enter valid choice!!!"<<endl;
 }
 }
 while(choice!=3);
 return 0;
}